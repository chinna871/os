#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to check if a string is a keyword
int isKeyword(char *str) {
    char keywords[][10] = {"int", "float", "char", "if", "else", "while", "for", "return"};
int i;
    for ( i = 0; i < sizeof(keywords) / sizeof(keywords[0]); i++) {
        if (strcmp(str, keywords[i]) == 0) {
            return 1; // It's a keyword
        }
    }

    return 0; // It's not a keyword
}

// Function to check if a string is an identifier
int isIdentifier(char *str) {
    if (isalpha(str[0]) || str[0] == '_') {
        return 1; // It's an identifier
    }

    return 0; // It's not an identifier
}

// Function to check if a string is a constant
int isConstant(char *str) {
    // Check if the first character is a digit
    if (isdigit(str[0])) {
    	int i;
        // Check if all characters are digits (integer constant)
        for (i = 1; str[i] != '\0'; i++) {
            if (!isdigit(str[i])) {
                return 0; // It's not a constant
            }
        }

        return 1; // It's an integer constant
    } else if (str[0] == '.' && isdigit(str[1])) {
    	
        // Check if the string starts with a dot and is followed by digits (float constant)
        for (i = 2; str[i] != '\0'; i++) {
            if (!isdigit(str[i])) {
                return 0; // It's not a constant
            }
        }

        return 1; // It's a float constant
    }

    return 0; // It's not a constant
}

int main() {
    char program[1000];
    printf("Enter a C program:\n");
    gets(program); // Note: gets() is deprecated, consider using fgets() or other methods for input

    char *token = strtok(program, " \t\n;(),{}[]");
    while (token != NULL) {
        if (isKeyword(token)) {
            printf("Keyword: %s\n", token);
        } else if (isIdentifier(token)) {
            printf("Identifier: %s\n", token);
        } else if (isConstant(token)) {
            printf("Constant: %s\n", token);
        }

        token = strtok(NULL, " \t\n;(),{}[]");
    }

    return 0;
}
